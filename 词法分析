#include <stdio.h>  
#include <string.h>  
#include<iostream.h>  
char prog[80],token[8],ch;
char *kind[3]={"num|letter","rwtab","symbol"};
int syn,p,m=0,n,row,sum,a=2;  
char *rwtab[26]={"main","if","then","while","do","static","int","double","struct",
"break","else","long","switch","case","typedef","char","return","const","float",
"short","continue","for","void","sizeof","default","do"};  
   
void Scan(void);  
  
main()  
{  
    char **s = kind;
    p=0;  
    printf("\n please input a string(end with '#'):\n");    
    do{  
            scanf("%c",&ch);  
            prog[p++]=ch;  
    }while(ch!='#');        
    p=0;  
    do{  
            Scan();  
            switch(syn)  
            {  
                case 11:  
                    printf("( %-10d%-10s%5d )\n",sum,kind[a],syn);  
                break;  
                  
                case -1:  
                    printf("you have input a wrong string\n");  
                    //getch();  
                    return 0;  
                break;  
                  
                default:   
                printf("( %-10s%-10s%5d )\n",token,kind[a],syn);  
                break;  
            }  
        }while(syn!=0);  
    //getch();  
 }  
  
void Scan(void)  /* 词法分析模块 */
{    
     
      
    for(m=0;m<8;m++)  
        token[m++]= NULL;  
      
        ch=prog[p++];  
        m=0;  
          
    while((ch==' ')||(ch=='\n'))  
        ch=prog[p++];  
      
    if(((ch<='z')&&(ch>='a'))||((ch<='Z')&&(ch>='A')))  
     {   
     a=0;  
        while(((ch<='z')&&(ch>='a'))||((ch<='Z')&&(ch>='A'))||((ch>='0')&&(ch<='9')))  
        {  
            token[m++]=ch;  
            ch=prog[p++];  
        }  
          
        p--; 
		
        syn=10;  
  
        for(n=0;n<26;n++)  /*同标识符作比较*/ 
        if(strcmp(token,rwtab[n])==0)  
        {   
        a=1;
            syn=n+1;  
            break;  
        }  
     }  
     else if((ch>='0')&&(ch<='9'))  
     {   a=0;  
        while((ch>='0')&&(ch<='9'))  
        {  
            sum=sum*10+ch-'0';  
            ch=prog[p++];  
        }  
        p--;  
        syn=11;  
    }  
    else   
    {  
    a=2;  
        switch(ch) //其他字符 
        {  
        case '<':  
            token[m++]=ch;  
            ch=prog[p++];  
            if(ch=='=')  
            {   
                syn=22;  
                token[m++]=ch;  
            }  
            else  
            {    
                syn=20;  
                p--;  
            }  
        break;  
  
        case '>':  
            token[m++]=ch;  
            ch=prog[p++];  
            if(ch=='=')  
            {  
                syn=24;  
                token[m++]=ch;  
            }  
            else  
            {   
                syn=23;  
                p--;  
            }  
        break;  
  
        case '+':  
            token[m++]=ch;  
            ch=prog[p++];  
            if(ch=='+')  
            {  
                syn=17;  
                token[m++]=ch;  
            }  
            else  
            {  
                syn=13;  
                p--;  
            }  
        break;  
  
        case '-':  
            token[m++]=ch;  
            ch=prog[p++];  
            if(ch=='-')  
            {  
                syn=29;  
                token[m++]=ch;  
            }  
            else  
            {   
                syn=14;  
                p--;  
            }  
        break;  
  
        case '!':  
            ch=prog[p++];  
            if(ch=='=')  
            {   
                syn=21;  
                token[m++]=ch;  
            }  
            else  
            {   
                syn=31;  
                p--;  
            }  
        break;  
  
        case '=':  
            token[m++]=ch;  
            ch=prog[p++];  
            if(ch=='=')  
            {  
                syn=25;  
                token[m++]=ch;  
            }  
            else  
            {  
                syn=18;  
                p--;  
            }  
        break;  
  
        case '*':  
       
            syn=15;  
            token[m++]=ch;  
        break;  
  
        case '/':  
            syn=16;  
            token[m++]=ch;  
        break;  
  
        case '(':   
            syn=27;  
            token[m++]=ch;  
        break;  
  
        case ')':  
            syn=28;  
            token[m++]=ch;  
        break;  
  
        case '{':   
            syn=5;  
            token[m++]=ch;  
        break;  
  
        case '}':   
            syn=6;  
            token[m++]=ch;  
        break;  
  
        case ';':
            syn=26;  
            token[m++]=ch;  
        break;  
  
        case '\'':
		      
            syn=30;  
            token[m++]=ch;  
        break;  
  
        case '#': 
		
            syn=0;  
            token[m++]=ch;  
        break;  
  
        case ':':  
            syn=17;  
            token[m++]=ch;  
        break;  
  
        default:  
            syn=-1;  
        break;  
        }  
    }  
        token[m++]='\0';  
}  
